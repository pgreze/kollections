/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.github.pgreze.kollections

import org.amshove.kluent.shouldBeEqualTo
import org.spekframework.spek2.Spek
import org.spekframework.spek2.style.specification.describe

class CounterTest : Spek({

    describe("a counter") {
        val c = counterOf("Alice" to 1)

        it("can be converted to a mutable one") {
            c.toMutableCounter() shouldBeEqualTo mutableCounterOf("Alice" to 1)
        }
        it("is equivalent to the original map") {
            c shouldBeEqualToOriginalMap mapOf("Alice" to 1)
        }
    }

    describe("2 counters") {
        val c1 = counterOf(arrayOf("a", "b", "b"))
        val c2 = counterOf(listOf("b", "c", "c"))

        it("support plusAll") {
            c1.plusAll(c2) shouldBeEqualTo mapOf(
                "a" to 1,
                "b" to 3,
                "c" to 2
            )
        }
    }

    describe("counterOf") {
        it("support CharSequence") {
            counterOf("abbccc") shouldBeEqualTo mapOf(
                'a' to 1,
                'b' to 2,
                'c' to 3
            )
        }
        it("support Array") {
            counterOf(arrayOf('a', 'b', 'b', 'c', 'c', 'c')) shouldBeEqualTo mapOf(
                'a' to 1,
                'b' to 2,
                'c' to 3
            )
        }
        it("support list") {
            counterOf(listOf('a', 'b', 'b', 'c', 'c', 'c')) shouldBeEqualTo mapOf(
                'a' to 1,
                'b' to 2,
                'c' to 3
            )
        }
        it("support set") {
            counterOf(setOf('a', 'b', 'c')) shouldBeEqualTo mapOf(
                'a' to 1,
                'b' to 1,
                'c' to 1
            )
        }
        it("support map") {
            counterOf(iterator {
                yield("Alice")
                yield("Bob")
                yield("Bob")
            }) shouldBeEqualTo mapOf(
                "Alice" to 1,
                "Bob" to 2
            )
        }
    }
})
